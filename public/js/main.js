(()=>{"use strict";var e={d:(t,s)=>{for(var r in s)e.o(s,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:s[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Z:()=>n});const t={authAs:"",form:document.querySelector(".form"),header:document.querySelector("h1"),loginInput:document.querySelector('input[placeholder="Email"]'),passInput:document.querySelector('input[placeholder="Password"]'),button:document.querySelector('input[type="submit"]'),link:document.querySelector("a"),init:()=>{t.form.style.display="block"},addEventListeners:function(){t.button.addEventListener("click",(()=>{"login"===t.form.classList[1]?t.signIn():t.signUp()})),t.link.addEventListener("click",(()=>{"login"===t.form.classList[1]?t.changeToRegisterForm():t.changeToLoginForm()})),t.loginInput.addEventListener("click",(()=>{t.loginInput.style.borderColor=""})),t.passInput.addEventListener("click",(()=>{t.passInput.style.borderColor=""}))},changeToRegisterForm:function(){t.form.classList.remove("login"),t.form.classList.add("register"),t.link.textContent="Already registered? Sing in",t.header.textContent="Register",t.button.value="Register"},changeToLoginForm:function(){t.form.classList.remove("register"),t.form.classList.add("login"),t.link.textContent="New user? Sign up",t.header.textContent="Login",t.button.value="Login"},signIn:function(){const e=t.loginInput.value,s=t.passInput.value;if(""===e)t.loginInput.style.borderColor="red";else if(""===s)t.passInput.style.borderColor="red",alert("Please, enter your password!");else if(null==localStorage.getItem(e))t.loginInput.style.borderColor="red",alert("Username is not correct! Check your username or register!");else{if(JSON.parse(localStorage.getItem(e)).pass===s)return t.completedAuth();t.passInput.style.borderColor="red",alert("Password is wrong!")}},alwaysTwoDigits:function(e){return 1===String(e).length?"0"+e:e},getRegDate:()=>{const e=new Date;return`${t.alwaysTwoDigits(e.getDate())}/${t.alwaysTwoDigits(e.getMonth()+1)}/${t.alwaysTwoDigits(e.getFullYear())} ${t.alwaysTwoDigits(e.getHours())}:${t.alwaysTwoDigits(e.getMinutes())}:${t.alwaysTwoDigits(e.getSeconds())}`},signUp:function(){const e=t.loginInput.value,s=t.passInput.value;""===e?(t.loginInput.style.borderColor="red",alert("Please, enter your email!")):/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/gi.test(e)?""===s?(t.passInput.style.borderColor="red",alert("Please, enter your password!")):null==localStorage.getItem(e)?(localStorage.setItem(e,JSON.stringify({pass:s,regDate:t.getRegDate(),permission:"user"})),t.passInput.value="",alert("Registration was successful! Log in!"),t.changeToLoginForm()):(alert("This user is already registered! Try logging in!"),t.loginInput.style.borderColor="red"):(t.loginInput.style.borderColor="red",alert("Email is not valid!"))},completedAuth:function(){t.authAs=t.loginInput.value,t.loginInput.value="",t.passInput.value="",t.form.style.display="none",alert("Succsesed login!"),localStorage.setItem("isAuth",!0),localStorage.setItem("authAs",t.authAs),n.isAuth=!0,n.loggedIn(t.authAs)}},s=t,r={authAs:"",account:document.querySelector(".console"),headerUserName:document.querySelector(".navbar-brand"),btnLogOut:document.querySelector("#log-out-btn"),mainUserName:document.querySelector("#username"),userRegData:document.querySelector("#userRegData"),table:document.querySelector("#table-data"),userPermissionHeader:document.querySelector("#userPermission"),userPermission:"",init:e=>{r.account.style.display="block",r.authAs=e,r.userPermission=JSON.parse(localStorage.getItem(r.authAs)).permission,r.render()},addEventListeners:()=>{r.btnLogOut.addEventListener("click",(()=>{r.isAuth=!1,r.authAs="",n.authAs=r.authAs,r.account.style.display="none",localStorage.setItem("isAuth",r.isAuth),localStorage.setItem("authAs",r.authAs),n.loggedOut()}));const e=document.querySelector(".modal"),t=e.querySelector("#user-email");e.addEventListener("show.bs.modal",(s=>{const a=s.relatedTarget.getAttribute("data-bs-userName");t.value=a,t.setAttribute("disabled",!0);const o=e.querySelector(".switch-btn");"admin"===r.userPermission?(e.querySelector(".switch-div").style.display="flex","admin"===JSON.parse(localStorage.getItem(a)).permission?o.classList.add("switch-on"):o.classList.remove("switch-on")):e.querySelector(".switch-div").style.display="none"})),e.querySelector(".switch-btn").addEventListener("click",(e=>{if("Master"!==t.value){console.log("toggle start"),e.target.classList.toggle("switch-on"),console.log("toggle end");let s=JSON.parse(localStorage.getItem(t.value));console.log(e.target.classList.contains("switch-on")),e.target.classList.contains("switch-on")?(s.permission="admin",localStorage.setItem(t.value,JSON.stringify(s)),r.render()):(s.permission="user",localStorage.setItem(t.value,JSON.stringify(s)),r.render(),r.authAs===t.value&&alert("Warning!\nYou have changed your account access to User!\nIf you close pop-up, you will lose Admin access."))}else alert("Access denied! The Master ALWAYS has Admin access!")}))},render:()=>{r.headerUserName.textContent=r.authAs,r.mainUserName.textContent=r.authAs,r.userRegData.textContent=JSON.parse(localStorage.getItem(r.authAs)).regDate,r.userPermission=JSON.parse(localStorage.getItem(r.authAs)).permission,r.userPermissionHeader.textContent=r.userPermission,"admin"===r.userPermission&&(r.userPermissionHeader.style.color="gold"),"admin"===r.userPermission&&(r.userPermissionHeader.style.fontWeight="700"),r.createUserList(),document.querySelectorAll(".activeUserBtn").forEach((e=>e.addEventListener("click",r.openModal))),document.querySelector("#changePassBtn").addEventListener("click",(()=>{const e=document.querySelector(".modal").querySelector("#user-email").value;r.changePassword(e)}))},createUserList:()=>{r.table.innerHTML="";const e=Object.keys(localStorage);e.splice(e.indexOf("isAuth"),1),e.splice(e.indexOf("authAs"),1),e.forEach(((e,t)=>{t++;const s=document.createElement("tr");e==r.authAs&&s.classList.add("table-success"),s.innerHTML=`<th scope="row" class="user-number">${t}</th>\n      <td class="user-email">${e}</td>\n      <td class="user-reg-date">${JSON.parse(localStorage.getItem(e)).regDate}</td>\n      <td class="user-reg-date">${JSON.parse(localStorage.getItem(e)).permission}</td>\n      <td class="edit">\n      <button type="button" ${"admin"==r.userPermission||e==r.authAs?"":"disabled"} class="btn btn-${"admin"==r.userPermission||e==r.authAs?"primary activeUserBtn":"danger"}" data-bs-toggle="modal" data-bs-target="#exampleModal" data-bs-userName="${e}">edit</button>\n\n      </td>`,r.table.append(s)}))},openModal:()=>{const e=document.querySelector("#changePassBtn");e.removeAttribute("disabled"),e.classList.remove("btn-secondary"),e.classList.add("btn-primary"),document.querySelector("#closeBtn").classList.remove("btn-primary"),document.querySelector("#closeBtn").classList.add("btn-secondary")},changePassword:e=>{const t=document.querySelector("#new-password"),s=document.querySelector("#re-new-password");if(s.addEventListener("click",(()=>{s.style.borderColor=""})),""==t.value)alert("Please enter new password!");else if(t.value!=s.value||""===t.value)s.style.borderColor="red",alert("Passwords don't match, check again!");else{const r=JSON.parse(localStorage.getItem(e));r.pass=t.value;const a=JSON.stringify(r);localStorage.setItem(e,a),t.value="",s.value="";const o=document.querySelector("#changePassBtn");o.setAttribute("disabled",!0),o.classList.remove("btn-primary"),o.classList.add("btn-secondary"),document.querySelector("#closeBtn").classList.remove("btn-secondary"),document.querySelector("#closeBtn").classList.add("btn-primary"),alert("Password changed successfully!")}}},a=r,o={debugging:!1,isAuth:!0,authAs:"Master",init:()=>{o.addMasterAccount(),a.addEventListeners(),s.addEventListeners(),o.debugging&&(localStorage.setItem("isAuth",o.isAuth),localStorage.setItem("authAs",o.authAs)),"true"==localStorage.getItem("isAuth")?(o.isAuth=!0,o.authAs=localStorage.getItem("authAs")):"false"==localStorage.getItem("isAuth")&&(o.isAuth=!1),o.isAuth?(s.form.style.display="none",o.loggedIn(o.authAs)):o.loggedOut()},loggedIn:e=>{a.init(e)},loggedOut:()=>{s.init()},addMasterAccount:()=>{null==localStorage.getItem("Master")&&localStorage.setItem("Master",JSON.stringify({pass:"Master",regDate:s.getRegDate(),permission:"admin"}))}};o.init();const n=o})();